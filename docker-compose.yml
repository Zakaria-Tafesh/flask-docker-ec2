version: '3.8'

services:
#  mysql:
#    build:
#      context: .
#      dockerfile: Dockerfile.mysql  # Use the custom Dockerfile for MySQL
#    container_name: flask-mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#    network_mode: host
#
#    volumes:
#      - mysql_data:/var/lib/mysql
#      - /etc/localtime:/etc/localtime:ro

#  flaskapp:
#    build: flaskapp-docker
#    container_name: flaskapp
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#    network_mode: host
#    volumes:
#      - /home/ubuntu/shared_docker/:/opt/shared_docker/
#      - /etc/localtime:/etc/localtime:ro
#
#    depends_on:
#      - mysql

#  nginx:
#    build: ./nginx
#    container_name: nginx
#    environment:
#      - SERVER_NAME=0.0.0.0
#    restart: always
#    network_mode: host
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#
#  scraper_2023:
#    build: ./scraper_docker
#    container_name: scraper_2023
#    restart: always
#    network_mode: host
#    volumes:
#      - /home/ubuntu/shared_docker/:/opt/shared_docker/
#      - /etc/localtime:/etc/localtime:ro

  mysql:
    image: mysql:5.7
    container_name: flask-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Ensure correct path and filename
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork

networks:
  mynetwork:



volumes:
  mysql_data:
